<?php

namespace obdo\KuchiKomiRESTBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SubscriptionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubscriptionRepository extends EntityRepository
{
    public function getNbSubscription()
    {
        return $this->createQueryBuilder('subscription')
                    ->select('COUNT(subscription)')
                    ->getQuery()
                    ->getSingleScalarResult();
    }
    
    /**
     * Get the number of subscription since the last $monthPeriod period
     *
     * @param integer $monthPeriod
     */
    public function getNbSubscriptions( $kuchi, $monthPeriod )
    {
    	$fromDate = new \DateTime('now', new \DateTimeZone('Europe/Paris'));
    	
    	$qb = $this->createQueryBuilder('subscription')
    	->select('COUNT(subscription)')
    	->leftJoin('subscription.kuchi', 'kuchi')
    	->andWhere('kuchi = :kuchi')
    	->setParameter('kuchi', $kuchi)
    	->andWhere('subscription.active = true AND subscription.timestampCreation >= :fromDate')
    	->setParameter('fromDate', $fromDate->sub(new \DateInterval('P'. $monthPeriod .'M')) );
    	 
    	return $qb->getQuery()->getSingleScalarResult();
    }
    
    /**
     * Get the number of subscription active
     *
     */
    public function getNbSubKomiActive($komi)
    {
    	
    	$qb = $this->createQueryBuilder('subscription')
    	->select('COUNT(subscription.komi)')
    	->andWhere('subscription.komi = :komi')
    	->setParameter('komi', $komi)
    	->andWhere('subscription.active = 1');
    	 
    	return $qb->getQuery()->getSingleScalarResult();
    }
    
    /*
     * Avoir le nbre de siuscription active pour un user
     */
    public function getNbSubActivebyId($userid)
    {
    	
    	$qb = $this->createQueryBuilder('subscription')
                ->select('COUNT(subscription.komi)')
                ->leftjoin('subscription.kuchi','kuchi')
                ->leftjoin('kuchi.kuchiGroup','kuchiGroup')
                ->join('kuchiGroup.users', 'users')
                ->andWhere('users.id = :userid')
                ->setParameter('userid', $userid)
                ->andWhere('subscription.active = 1');
    	 
    	return $qb->getQuery()->getSingleScalarResult();
    }
}
